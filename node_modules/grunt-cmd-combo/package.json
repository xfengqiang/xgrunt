{
  "name": "grunt-cmd-combo",
  "description": "Concat SeaJS module files.",
  "version": "1.0.0",
  "homepage": "https://github.com/perfectworks/grunt-cmd-combo",
  "author": {
    "name": "PerfectWorks",
    "email": "perfectworks@gmail.com",
    "url": "http://lostjs.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/perfectworks/grunt-cmd-combo.git"
  },
  "bugs": {
    "url": "https://github.com/perfectworks/grunt-cmd-combo/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/perfectworks/grunt-cmd-combo/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.6.0"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-jslint": "*",
    "grunt-contrib-copy": "*",
    "grunt-contrib-connect": "*",
    "grunt-contrib-qunit": "*",
    "underscore": "*"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "underscore": "*",
    "uglify-js": "*",
    "source-map": "*"
  },
  "readme": "# grunt-cmd-combo\n\n用来打包 [SeaJS] 模块的 [grunt] 任务。\n\n## 特点\n\ngrunt-cmd-combo 打包后的文件可以脱离 SeaJS 直接执行。\n\ngrunt-cmd-combo 的模块化标准是 SeaJS 的一个子集，规则非常简单：\n\n* 所有的 `define` 定义只包含一个参数，即 `factory` 函数：\n* `factory` 函数只接受 `require` 函数以及 `exports` 对象，不接受 `module` 对象\n* `require` 只支持相对路径 `require`\n\n例子：\n\n```\n/* math.js */\ndefine(function (require) {\n    return {\n        plus: function (a, b) {\n            return a + b;\n        }\n    };\n});\n\n/* main.js */\ndefine(function (require) {\n    require('./math').plus(1, 2); // 3\n});\n```\n\n## 原理\n\n以上面给的例子 `math.js` 以及 `main.js` 为例，在对 `main.js` 打包时的流程如下：\n\n1. 分析入口模块 `main.js`，建立主模块的依赖数组 `dpes`\n1. 将所有的 require 参数由相对于当前文件的路径转为相对于源码根目录的路径：`require('./math')` 会被转换为 `require('math')`\n1. 分析所有依赖的模块，将依赖的模块名加入 `deps`\n1. 对所有依赖的模块，递归地进行 2-4 步\n1. 将 `deps` 中所有的模块中的代码按顺序合并成一个文件 `main.combo.js`\n1. 将 `loader.js` 的内容加到 `main.combo.js`（提供无 SeaJS 环境下的 `define` 函数支持）\n1. 将 `main.js` 的内容加到 `main.combo.js` 的结尾\n\n### loader.js\n\n`loader.js` 提供了最简单的一个 `define` 函数实现，以使得代码在打包后可以脱离 SeaJS 执行。\n\n## 使用\n\n安装：\n\n```\nnpm install grunt-cmd-combo\n```\n\ngrunt-cmd-combo 是一个 MultiTask，支持 3 个参数：\n\n`src` 模块根目录。所有的模块都应该放在这个目录下，必须以 `/` 结尾。\n\n`dest` 目标目录，必须以 `/` 结尾。\n\n`initModules` 入口模块。文件路径应该相对于 `src` 目录，支持文件通配符指定多个入口模块，会分别打包输出成多个文件。\n\n参考例子：\n\n```\ngrunt.initConfig({\n    combo: {\n        options: {\n            sourceMap: {\n                sourceRoot: '/src/'\n            }\n        },\n        build: {\n            files: [{\n                expand: true,\n                cwd: 'test/src/',\n                src: '**/*.js',\n                dest: 'test/dist',\n                ext: '.combo.js'\n            }]\n        }\n    }\n});\n\ngrunt.loadNpmTasks('grunt-cmd-combo');\n```\n\n会将 `dist/main.js` 打包输出到 `dist/main.combo.js`。\n\n打包后的代码只需要一个 `<script>` 标签来载入，不需要 SeaJS 支持：\n\n```\n    <script src=\"/dist/main.combo.js\" data-main=\"main\" type=\"text/javascript\"></script>\n```\n## 参数\n\n* `files` (必须) 参考 [grunt files object]\n* `sourceMap` (可选）非空则生成 `sourceMap`，默认不生成\n* `sourceMap.sourceRoot` (可选) 生成 `sourceMap` 中的 `sourceRoot` (参考 [SourceMapGenerator] 中的 `sourceRoot` 参数)\n\n## 优点\n\n* 简单，只支持 SeaJS 模块化规范中最精简的一个子集\n* 可靠，经历过[网易微博]、[有道云笔记]等多个项目近 2 年的实际应用检验，从来没出过问题\n\n## Push Request\n\n欢迎提交 Push Request，提交前请先通过 `grunt test` 保证代码通过单元测试和 jslint 检查。\n\n## 发布历史\n\n* `1.0.0` 2013-02-28 发布第一个正式版本，更新了 README.md 和 testcase 到 Grunt 0.4.0。\n* `0.1.8` 2013-02-22 Grunt 0.4 支持。\n* `0.1.6` 2013-01-07 保留注释。\n* `0.1.5` 2012-12-10 增加 source map 支持。\n* `0.1.4` 2012-12-10 文件增加 `.combo` 后缀。\n* `0.1.0` 2012-12-10 首次发布。\n\n## License\nCopyright (c) 2012 PerfectWorks  \nLicensed under the MIT license.\n\n[SeaJS]: http://seajs.org\n[grunt]: http://gruntjs.com\n[网易微博]: http://t.163.com\n[有道云笔记]: http://note.youdao.com\n[SourceMapGenerator]: https://github.com/mozilla/source-map#sourcemapgenerator\n[grunt files object]: http://gruntjs.com/configuring-tasks#files\n",
  "readmeFilename": "README.md",
  "_id": "grunt-cmd-combo@1.0.0",
  "dist": {
    "shasum": "0ce25eba441c42ddad37d6fc0a68f57a16935195",
    "tarball": "http://registry.npmjs.org/grunt-cmd-combo/-/grunt-cmd-combo-1.0.0.tgz"
  },
  "_npmVersion": "1.2.0",
  "_npmUser": {
    "name": "perfectworks",
    "email": "perfectworks@gmail.com"
  },
  "maintainers": [
    {
      "name": "perfectworks",
      "email": "perfectworks@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "0ce25eba441c42ddad37d6fc0a68f57a16935195",
  "_resolved": "https://registry.npmjs.org/grunt-cmd-combo/-/grunt-cmd-combo-1.0.0.tgz",
  "_from": "grunt-cmd-combo@*"
}
